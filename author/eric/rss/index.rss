<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>eric - Compose Articles</title><description>News, tips, and tricks from the team at Compose</description><link>http://localhost:2368/</link><generator>Ghost 0.5</generator><lastBuildDate>Fri, 13 Mar 2015 15:33:53 GMT</lastBuildDate><atom:link href="http://localhost:2368/author/eric/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title>Connect to MongoHQ</title><description>&lt;p&gt;In the first of many posts to simplify connecting to MongoHQ, we’re providing sample code for many programming languages, frameworks and setups (replica sets, slaveOk, etc).&lt;/p&gt;

&lt;p&gt;These examples all assume that your MongoHQ connection string is set in an environment variable MONGOHQ_URL, like this:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;export MONGOHQ_URL=mongodb://user:pass@server.mongohq.com/db_name&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you use any of our &lt;a href="http://support.mongohq.com/topics/partners/who-are-mongohq-platform-partners.html"&gt;PaaS providers&lt;/a&gt; this environment variable should already be set when you choose the MongoHQ add-on. Or you can set it yourself using whatever mechanism the Paas allows. For example, in Heroku:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;heroku config:add MONGOHQ_URL=mongodb://...&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Today I’ll roll out &lt;a href="https://gist.github.com/1871068"&gt;PHP&lt;/a&gt;, &lt;strong&gt;two&lt;/strong&gt; NodeJS (&lt;a href="https://gist.github.com/1872894"&gt;JS&lt;/a&gt; and &lt;a href="https://gist.github.com/1872995"&gt;Coffee&lt;/a&gt;), and &lt;a href="https://gist.github.com/1872516"&gt;Ruby&lt;/a&gt; snippets. In every case we use the basic driver to connect (no frameworks like CakePHP or Mongoid–those will come later).&lt;/p&gt;

&lt;h2 id="phpconnectiontomongohq"&gt;PHP Connection to MongoHQ&lt;/h2&gt;

&lt;p&gt;This originally began as a &lt;a href="https://gist.github.com/coderoshi"&gt;Gist&lt;/a&gt; from Larry Hitchon of AppFog. I fixed it up a bit and made it MongoHQ-centric. It’s a pretty &lt;a href="http://php.net/manual/en/class.mongodb.php"&gt;straightforward driver&lt;/a&gt;. If you don’t have PECL, you should &lt;a href="http://pecl.php.net/"&gt;install PECL&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo pecl install mongo&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;code data-language="html"&amp;gt;&amp;lt;!-- PHP Mongo Docs: http://php.net/manual/en/class.mongodb.php --&amp;gt;


&amp;lt;h1&amp;gt;MongoHQ Test&amp;lt;/h1&amp;gt;  
&amp;lt;?php  
  try {
    // connect to MongoHQ assuming your MONGOHQ_URL environment
    // variable contains the connection string
    $connection_url = getenv("MONGOHQ_URL");

    // create the mongo connection object
    $m = new Mongo($connection_url);

    // extract the DB name from the connection path
    $url = parse_url($connection_url);
    $db_name = preg_replace('/\/(.*)/', '$1', $url['path']);

    // use the database we connected to
    $db = $m-&amp;gt;selectDB($db_name);

    echo "&amp;lt;h2&amp;gt;Collections&amp;lt;/h2&amp;gt;";
    echo "&amp;lt;ul&amp;gt;";

    // print out list of collections
    $cursor = $db-&amp;gt;listCollections();
    $collection_name = "";
    foreach( $cursor as $doc ) {
      echo "&amp;lt;li&amp;gt;" .  $doc-&amp;gt;getName() . "&amp;lt;/li&amp;gt;";
      $collection_name = $doc-&amp;gt;getName();
    }
    echo "&amp;lt;/ul&amp;gt;";

    // print out last collection
    if ( $collection_name != "" ) {
      $collection = $db-&amp;gt;selectCollection($collection_name);
      echo "&amp;lt;h2&amp;gt;Documents in ${collection_name}&amp;lt;/h2&amp;gt;";

      // only print out the first 5 docs
      $cursor = $collection-&amp;gt;find();
      $cursor-&amp;gt;limit(5);
      echo $cursor-&amp;gt;count() . ' document(s) found. &amp;lt;br/&amp;gt;';
      foreach( $cursor as $doc ) {
        echo "

&amp;lt;pre&amp;gt;";
        var_dump($doc);
        echo "&amp;lt;/pre&amp;gt;";
      }
    }

    // disconnect from server
    $m-&amp;gt;close();
  } catch ( MongoConnectionException $e ) {
    die('Error connecting to MongoDB server');
  } catch ( MongoException $e ) {
    die('Mongo Error: ' . $e-&amp;gt;getMessage());
  } catch ( Exception $e ) {
    die('Error: ' . $e-&amp;gt;getMessage());
  }
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="nodejsconnectiontomongohqjavascript"&gt;NodeJS Connection to MongoHQ (JavaScript)&lt;/h2&gt;

&lt;p&gt;This code uses the &lt;a href="https://github.com/christkv/node-mongodb-native"&gt;node-mongodb-native&lt;/a&gt; driver, though in production you may want something a little less… &lt;em&gt;nesty&lt;/em&gt;. Like all good Node packages, you can get it via &lt;a href="http://npmjs.org/"&gt;NPM&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install mongodb&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;code data-language="javascript"&amp;gt;// npm install mongodb  
var mongodb = require('mongodb');  
var url = require('url');  
var log = console.log;

var connectionUri = url.parse(process.env.MONGOHQ_URL);  
var dbName = connectionUri.pathname.replace(/^\//, '');

mongodb.Db.connect(process.env.MONGOHQ_URL, function(error, client) {  
  if (error) throw error;

  client.collectionNames(function(error, names){
    if(error) throw error;

    // output all collection names
    log("Collections");
    log("===========");
    var lastCollection = null;
    names.forEach(function(colData){
      var colName = colData.name.replace(dbName + ".", '')
      log(colName);
      lastCollection = colName;
    });

    var collection = new mongodb.Collection(client, lastCollection);
    log("\nDocuments in " + lastCollection);
    var documents = collection.find({}, {limit:5});

    // output a count of all documents found
    documents.count(function(error, count){
      log("  " + count + " documents(s) found");
      log("====================");

      // output the first 5 documents
      documents.toArray(function(error, docs) {
        if(error) throw error;

        docs.forEach(function(doc){
          log(doc);
        });

        // close the connection
        client.close();
      });
    });
  });
});
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="nodejsconnectiontomongohqcoffeescript"&gt;NodeJS Connection to MongoHQ (CoffeeScript)&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;(Side note… &lt;a href="http://www.livestream.com/nodepdx/video?clipId=pla_84d1391f-49c6-4a54-b25a-c9c54028c93c"&gt;I love coffeescript&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;code data-language="coffeescript"&amp;gt;# npm install mongodb  
mongodb = require 'mongodb'  
url = require 'url'  
log = console.log

connection_uri = url.parse(process.env.MONGOHQ_URL)  
db_name = connection_uri.pathname.replace(/^\//, '')

mongodb.Db.connect process.env.MONGOHQ_URL, (error, client)-&amp;gt;  
  throw error if error

  client.collectionNames (error, names)-&amp;gt;
    throw error if error

    # output all collection names
    log "Collections"
    log "==========="
    last_collection = null
    for col_data in names
      col_name = col_data.name.replace("#{db_name}.", '')
      log col_name
      last_collection = col_name

    collection = new mongodb.Collection(client, last_collection)
    log "\nDocuments in #{last_collection}"
    documents = collection.find({}, limit : 5)

    # output a count of all documents found
    documents.count (error, count)-&amp;gt;
      log "  #{count} documents(s) found"
      log "===================="

      # output the first 5 documents
      documents.toArray (error, docs)-&amp;gt;
        throw error if error

        for doc in docs then log doc

        # close the connection
        client.close()
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="rubyconnectiontomongohq"&gt;Ruby Connection to MongoHQ&lt;/h2&gt;

&lt;p&gt;We wrap up today by connecting Ruby to MongoHQ. To get started, install the &lt;code&gt;mongo&lt;/code&gt; gem. If you want more speed, install the native &lt;code&gt;bson_ext&lt;/code&gt;, and if you are in less than Ruby 1.9, you’ll need the &lt;code&gt;json&lt;/code&gt; gem. It should go without saying, but you will need &lt;a href="http://rubygems.org/"&gt;RubyGems&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;gem install mongo bson_ext json&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;code data-language="ruby"&amp;gt;# gem install mongo bson_ext json  
require 'rubygems'  # if less than Ruby 1.9  
require 'mongo'  
require 'uri'  
require 'json'

def get_connection  
  return @db_connection if @db_connection
  db = URI.parse(ENV['MONGOHQ_URL'])
  db_name = db.path.gsub(/^\//, '')
  @db_connection = Mongo::Connection.new(db.host, db.port).db(db_name)
  @db_connection.authenticate(db.user, db.password) unless (db.user.nil? || db.user.nil?)
  @db_connection
end

db = get_connection

puts "Collections"  
puts "==========="  
collections = db.collection_names  
puts collections

last_collection = collections[-1]  
coll = db.collection(last_collection)

# just show 5
docs = coll.find().limit(5)

puts "\nDocuments in #{last_collection}"  
puts "  #{docs.count()} documents(s) found"  
puts "=========================="  
docs.each{ |doc| puts doc.to_json }  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Part 2 will be Python and Java, and maybe more.&lt;/p&gt;</description><link>http://localhost:2368/connect-to-mongohq/</link><guid isPermaLink="false">2cfa8da5-4656-4cce-80c2-d11cf6250c44</guid><category>coffee</category><category>mongodb</category><category>mongohq</category><category>nodejs</category><category>php</category><category>ruby</category><dc:creator>eric</dc:creator><pubDate>Mon, 20 Feb 2012 15:45:20 GMT</pubDate></item><item><title>Some MongoHQ Screenshots</title><description>&lt;p&gt;I planned to write a long, drawn out post about MongoHQ’s new webapp design that we’re rolling out to select customers today. I planned to entice you with juicy words. But since a picture is worth a thousand words, here are 4000 words about our new chart application:&lt;/p&gt;

&lt;h2 id="choosingadatabase"&gt;Choosing a Database&lt;/h2&gt;

&lt;p&gt;&lt;img src="http://localhost:2368/content/images/2014/12/dropdown_tluhzo_bm7fi1.jpg" alt="Dropdown"&gt;&lt;/p&gt;

&lt;h2 id="followingdatabaseoperations"&gt;Following Database Operations&lt;/h2&gt;

&lt;p&gt;&lt;img src="http://localhost:2368/content/images/2014/12/bigchart_soyvmh_nlwree.jpg" alt="Big Chart"&gt;&lt;/p&gt;

&lt;h2 id="lotsoflittledetails"&gt;Lots of Little Details&lt;/h2&gt;

&lt;p&gt;&lt;img src="http://localhost:2368/content/images/2014/12/sparklines_qtn9h8_jxbrlx.png" alt="Sparklines"&gt;&lt;/p&gt;

&lt;h2 id="worksinmobile"&gt;Works in Mobile&lt;/h2&gt;

&lt;p&gt;&lt;img src="http://localhost:2368/content/images/2014/12/mobilechart_oieuuc_xittof.jpg" alt="Mobile Chart"&gt;&lt;/p&gt;</description><link>http://localhost:2368/some-mongohq-screenshots/</link><guid isPermaLink="false">dffe1d2e-61ce-4a54-81b2-1bf8c322b18e</guid><category>mongodb</category><category>mongohq</category><category>webapp</category><dc:creator>eric</dc:creator><pubDate>Wed, 15 Feb 2012 15:40:24 GMT</pubDate></item><item><title>APIs Are Beautiful Things</title><description>&lt;p&gt;A good design keeps end-users in mind to craft a first-rate user experience (UX): straightforward workflow, clutter reduction, beautiful and joyful to use, and thousands other good rules of thumb. A good API follows many of the same rules. But rather than buttons and graphs, it manifests itself as beautiful markup and unambiguous actions. APIs are UX for programmers.&lt;/p&gt;

&lt;p&gt;We are in the midst of an overhaul, of sorts, to much of our internal and external codebase. We’ve replaced the gerbils who used to perform all of the MongoHQ work with an API (which wraps even smarter gerbils, but we’ll focus on the API for now). We wanted to ensure that we designed something we wanted to use, so these new systems all interacts through our new API. We are eating our own breakfast here, to make sure it’s tasty and healthful before serving you.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://localhost:2368/content/images/2014/12/gerbils_jzl8mq_vxlehs.png" alt="MongoHQ Gerbils" title=""&gt;The new API isn’t ready for prime-time, yet. But it’s out there, and you’re welcome to take a &lt;a href="http://support.mongohq.com/api"&gt;look&lt;/a&gt;. This is still a VERY BETA product, so bear in mind we make changes and improvements all the time.&lt;/p&gt;

&lt;h2 id="apiexample"&gt;API Example&lt;/h2&gt;

&lt;h3 id="unsolicitedexample"&gt;Unsolicited Example&lt;/h3&gt;

&lt;p&gt;Before digging into the API, let’s see what you can do with the &lt;a href="http://support.mongohq.com/api"&gt;MongoHQ REST API&lt;/a&gt;. &lt;a href="https://twitter.com/#!/dknell"&gt;David Knell&lt;/a&gt; created this cool MongoHQ client module for Appcelerator (mobiles devices). He doesn’t work for us, and we didn’t solicit him to do it. Check out his video:&lt;/p&gt;

&lt;p&gt;&lt;figure class="embed"&gt;&lt;iframe allowfullscreen frameborder="0" src="http://www.youtube.com/embed/eOGsq-gVlfQ?rel=0;3&amp;amp;autohide=1&amp;amp;showinfo=0"&gt;&lt;/iframe&gt;&lt;/figure&gt;My favorite part is when he creates a database from our list of plans. One click&lt;em&gt;create-deploy-use&lt;/em&gt;! This is exactly the kind of open ecosystem we’re trying to build by making MongoHQ the most transparent and fully featured database host, while holding to our ideals of simplicty and reliability.&lt;/p&gt;

&lt;h3 id="gettingakey"&gt;Getting a Key&lt;/h3&gt;

&lt;p&gt;The API is simple to use. But you’ll first need a &lt;a href="https://bridge.mongohq.com/signup"&gt;MongoHQ account&lt;/a&gt; (sadly, a database created through a PaaS like Heroku or AppFog won’t work–you’ll need to sign up). Log into the web application, and click on “My Account” in the upper right. There you’ll find your secret API key, also known as &lt;code&gt;_apikey&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id="creatingadatabase"&gt;Creating a Database&lt;/h3&gt;

&lt;p&gt;You can find out what plans we offer by issuing a GET request to the &lt;code&gt;/plans&lt;/code&gt;path. All api requests hit the &lt;code&gt;https://api.mongohq.com&lt;/code&gt; endpoint. We’ll use &lt;code&gt;curl&lt;/code&gt; for convenience, but you can use anything that issues an HTTP GET request. Just be sure to replace &lt;code&gt;XXXXXXX&lt;/code&gt; with your own private API key (also, don’t let it fall into the wrong hands!).&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -X GET "https://api.mongohq.com/plans?_apikey=XXXXXXX"  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once you’ve picked the plan you want, issue a POST to &lt;code&gt;/databases&lt;/code&gt; to create a new one. You’ll need two JSON values: a &lt;code&gt;name&lt;/code&gt; to give this database, and the type of &lt;code&gt;plan&lt;/code&gt; you want (we’ll just pick &lt;code&gt;free&lt;/code&gt;).&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -X POST "https://api.mongohq.com/databases?_apikey=XXXXXXX"  
-H 'Content-Type: application/json' 
-d '{"name" : "test_db"}'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can make up to 5 free databases this way in a single account–of course there’s no limit to how many larger plans you want to make.&lt;/p&gt;

&lt;h2 id="greatpower"&gt;Great Power&lt;/h2&gt;

&lt;p&gt;This was just a quick demo for making a new database through the &lt;a href="http://support.mongohq.com/api"&gt;MongoHQ API&lt;/a&gt;. If you read the docs, you can see how to create/query collections/documents/indexes, check invoices, view stats (for larger plans), and more.&lt;/p&gt;

&lt;p&gt;As a reminder, this is a &lt;strong&gt;beta&lt;/strong&gt; API, so keep that in mind before you bet the farm on it. Feel free to play around, and by all means, &lt;a href="http://support.mongohq.com/"&gt;make suggestions&lt;/a&gt;. We love your feedback.&lt;/p&gt;</description><link>http://localhost:2368/apis-are-beautiful-things/</link><guid isPermaLink="false">f0e61df5-507a-4ad6-9298-97fe3037d0a1</guid><category>API</category><category>mongodb</category><category>mongohq</category><dc:creator>eric</dc:creator><pubDate>Fri, 03 Feb 2012 15:34:34 GMT</pubDate></item><item><title>MongoHQ European Invasion</title><description>&lt;p&gt;MongoHQ is preparing to span the globe and, like all domination plans, it begins with Europe.&lt;/p&gt;

&lt;p&gt;We have for quite some time dedicated plans in Europe on a limited basis. MongoHQ has just launched &lt;a href="http://localhost:2368/content/images/2014/12/europe_vbmwx6_auofbz.jpg"&gt;replica set plans&lt;/a&gt;If you have concerns about a US company hosting European data–we have recently become &lt;a href="http://localhost:2368/content/images/2014/12/safeharbor_dcaz6u_bldg50.png"&gt;EU and Swiss Safeharbor&lt;/a&gt;Finally, MongoHQ is going on a quick &lt;a href="http://blog.mongohq.com/"&gt;European tour&lt;/a&gt; (of sorts) in late April. The current plans are meeting the &lt;a href="http://www.meetup.com/London-MongoDB-User-Group/"&gt;London MongoDB Group&lt;/a&gt; on April 17, &lt;a href="http://www.railsberry.com/speakers/#eric"&gt;Railsberry in Krakow Poland&lt;/a&gt; April 19-20, and leaving the EU on April 23. Come meet up in London or Poland (or maybe a third location? We have nothing planned on 21-22, and have been known to travel great distances for beer).&lt;/p&gt;</description><link>http://localhost:2368/mongohq-european-invasion/</link><guid isPermaLink="false">d01f5541-8988-4695-8919-63a740a3300d</guid><category>europe</category><category>mongodb</category><category>mongohq</category><category>safeharbor</category><dc:creator>eric</dc:creator><pubDate>Tue, 31 Jan 2012 15:23:04 GMT</pubDate></item><item><title>MongoHQ on AppFog</title><description>&lt;p&gt;After months of coordination and rumors, today I’m happy to announce that MongoHQ is a supported &lt;a href="http://localhost:2368/content/images/2014/12/AppFog_logo_baf2qd_x4zl77.png"&gt;add-on for AppFog&lt;/a&gt;MongoHQ was founded on the idea that data management should be easy—so developers can get down to the business of coding rather than spending time on complex database operations. We believe that simplicity and robust scalability can co-exist. Like MongoHQ, AppFog shares this belief, which is why we are so excited to begin this partnership. AppFog and MongoHQ customers will benefit greatly as our integration makes setting up and managing a scalable cloud hosted application that much easier.&lt;/p&gt;

&lt;p&gt;This is MongoHQ’s &lt;a href="http://docs.mongohq.com/partners" title="MongoHQ PaaS partners"&gt;5th PaaS&lt;/a&gt; partner, along with Heroku, AppHarbor, Nodejitsu, and CloudBees—and the first focused largely on PHP (though they are growing beyond that).&lt;/p&gt;</description><link>http://localhost:2368/mongohq-on-appfog/</link><guid isPermaLink="false">49417b1e-ad89-460f-9da1-f55ce5087552</guid><category>appfog</category><category>mongo</category><category>mongodb</category><category>mongodb addon</category><category>mongodb hosting</category><category>mongohq</category><category>paas</category><category>phpfog</category><dc:creator>eric</dc:creator><pubDate>Wed, 18 Jan 2012 15:19:43 GMT</pubDate></item><item><title>MongoDB 2.0 Upgrade</title><description>&lt;p&gt;We’ve spent the past few weeks diligently upgrading many of our databases to Mongo 2.0. The big news is that next we are upgrading all of our &lt;em&gt;free&lt;/em&gt; plans next week. Save the date:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tuesday, Dec. 27, 2011 at 8:00am PST&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id="whyareweupgrading"&gt;Why Are We Upgrading?&lt;/h2&gt;

&lt;p&gt;MongoDB 2.0 includes significant improvements that we wish to provide our customers (and, frankly, to use ourselves). We also wanted to ensure all of the kinks were worked out before rolling out a wide-scale release.&lt;/p&gt;

&lt;p&gt;Here are some of the highlights of the 2.0 release:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Faster/Smaller Indexes&lt;/strong&gt;: Indexes are on average 25% smaller and 25% faster.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Concurrency Improvements&lt;/strong&gt;: MongoDB will now, in certain cases, yield a write lock when having to go to disk for information… increasing query performance&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;New query options&lt;/strong&gt;: better multi-line regex and a new &lt;code&gt;$and&lt;/code&gt; operator.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;New Geospatial Features&lt;/strong&gt;: You can now use &lt;code&gt;$within&lt;/code&gt; queries for polygonal shapes. This is great for odd polygons like counties in a state.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Compact Command&lt;/strong&gt;: allows you to compact individual collections in a database without having to repair the entire database.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ReplicaSet Improvements&lt;/strong&gt;: If you have a &lt;a href="http://mongohq.com/pricing"&gt;ReplicaSet plan&lt;/a&gt;, more system stability via more nuanced mongod communications.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;More&lt;/strong&gt;: For more information, read the &lt;a href="http://www.mongodb.org/display/DOCS/2.0+Release+Notes"&gt;10gen release on MongoDB 2.0&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="upgradingdrivers"&gt;Upgrading Drivers&lt;/h2&gt;

&lt;p&gt;For the most part, your existing drivers running against MongoDB 1.8 should still function after this upgrade. However, this is still an architectural change, and we highly recommend you test your code against your own MongoDB 2.0.2 server.&lt;/p&gt;

&lt;p&gt;Furthermore, we recommend upgrading your drivers or Object Document Mappers to newer versions, if you can, to ensure you can take full advantage of the MongoDB 2.0 features.&lt;/p&gt;

&lt;h2 id="support"&gt;Support&lt;/h2&gt;

&lt;p&gt;If you have questions about the upgrade, please contact us at &lt;a href="mailto:support@mongohq.com"&gt;support@mongohq.com&lt;/a&gt;. We are happy to assist you to ensure you are prepared.&lt;/p&gt;</description><link>http://localhost:2368/mongodb-2-0-upgrade/</link><guid isPermaLink="false">4a36c39d-dfed-4d37-8121-3b5afd9d6b84</guid><category>mongo hosting</category><category>mongodb</category><category>mongodb 2.0</category><category>mongodb hosting</category><category>mongohq</category><category>upgrade</category><dc:creator>eric</dc:creator><pubDate>Wed, 21 Dec 2011 15:07:54 GMT</pubDate></item><item><title>MongoDB Cost Breakdown</title><description>&lt;p&gt;No conversation about &lt;a href="http://mongohq.com/" title="MongoHQ"&gt;hosted MongoDB&lt;/a&gt; can be complete without someone bringing up &lt;em&gt;cost&lt;/em&gt;. Though generally not a software team’s number one concern–it’s certainly in the top three. You could argue that someone who works for a hosted database service showing cost breakdowns might be tempted to skew the numbers–so I provide citations where available.&lt;/p&gt;

&lt;p&gt;We should begin by saying these figures are rough estimates based on feedback from some of our thousands of customers–and the research we checked seemed to support that. This doesn’t mean you should not run up your own figures. This is also not meant to imply that MongoDB costs more than any other database to manage. That’s, again, an individual matter, but in our experience Mongo actually costs less for the types of distributed architecture it supports.&lt;/p&gt;

&lt;p&gt;Let’s begin with the most expensive aspect of any software system: labor (all costs are in USD as of Dec 16, 2011).&lt;/p&gt;

&lt;h2 id="laborcosts"&gt;Labor Costs&lt;/h2&gt;

&lt;p&gt;Your average MongoDB employee will rake in about &lt;a href="http://www.indeed.com/salary?q1=MongoDB" title="MongoDB Salary"&gt;$95,000 a year&lt;/a&gt;. If that seems spendy, the average DBA nets &lt;a href="http://www.indeed.com/salary?q1=DBA" title="Database Administrator Salary"&gt;$2,000 more&lt;/a&gt;. Of course, add on top of this benefits, payroll taxes, office space, etc, and you’re looking at nearer to $120,000/yr–or a cool $10,000 a month for a MongoDB administrator.&lt;/p&gt;

&lt;p&gt;If you’re smaller, you likely won’t have a dedicated administrator–so this is a wash, right? Well, not quite. I’ll use my previous employer as an example.&lt;/p&gt;

&lt;p&gt;Like every overconfident developer, I was &lt;em&gt;certain&lt;/em&gt; the whole process would only take a day. But I didn’t know what I didn’t know–and two weeks later we had a running Mongo system in production. Day one was easy. Install the OS, tools, patches, and MongoDB. Day two and onward was learning to administer, secure, optimize, handle backups and restores, and so on. That entire process cost my company $5,000 in time, with a labor maintinence of approx. 10 minutes a week per person, as folks wrestled with a poorly configured system. That’s a cost of about $500 per month spread across our 11 man team.&lt;/p&gt;

&lt;p&gt;Or we could have set up the same system &lt;em&gt;plus&lt;/em&gt; replication, hosted for $149 a month in 15 minutes, including all operations, nightly backups, security, and hardware. Speaking of which:&lt;/p&gt;

&lt;h2 id="hardwarecosts"&gt;Hardware Costs&lt;/h2&gt;

&lt;p&gt;This varies greatly based on your data size, I/O, CPU and RAM requirements, which can also drive replication and sharding, and so on. With all of the variables, how can we quantify a cost? Let’s keep things simple with a couple fixed examples: smaller and larger.&lt;/p&gt;

&lt;p&gt;The smallest and cheapest plan you’d probably have is a single small cloud server. With 1 year signup, a small AWS EC2 reserved instance (1.7 GB RAM) plus, say, 5 GB EBS storage will cost you about &lt;a href="http://aws.amazon.com/ec2/pricing/" title="Small EC2"&gt;$45&lt;/a&gt; a month. A similar MongoHQ hosted plan will cost you &lt;a href="http://mongohq.com/pricing"&gt;$49&lt;/a&gt; a month with no yearly commitment. If even that’s too rich for your blood, we have an even smaller plan for $15 a month–a deal you’d be hard pressed to replicate on the cheapest virtual host.&lt;/p&gt;

&lt;p&gt;A bigger setup might be six quadruple extra large servers (two shards and a config, with two replset servers for each). These heavy utilization servers will cost you &lt;a href="http://aws.amazon.com/ec2/pricing/" title="Quad Extra Large EC2"&gt;$6,400 each&lt;/a&gt; for a 1 year term ($38,400 for all six), plus around $2025 per month usage costs–or $5225 total a month.&lt;/p&gt;

&lt;p&gt;Let’s ponder this: is it worth getting the quads, or should you get doubles for half price if you use EBS, since you still have to deal with the EBS I/O constraint anyway? Or should you just buy your own dedicated, bare metal hardware? If so, where do you host that relative to your application to reduce I/O rates and costs? Those are all questions worth asking… the kind we happen to be equipped to answer. A hosted solution can actually save you money on hardware costs–because when you manage nearly 20,000 database installs, we get pretty good at right-sizing.&lt;/p&gt;

&lt;p&gt;If that’s not a persuasive cost-saving argument–consider that hosted solutions like MongoHQ also leverage &lt;a href="http://en.wikipedia.org/wiki/Economies_of_scale"&gt;economies of scale&lt;/a&gt; by providing similar (virtual) hardware to thousands of clients. In other words: our environment providers like us very much.&lt;/p&gt;

&lt;h2 id="othercosts"&gt;Other costs&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://www.mongodb.org/"&gt;MongoDB&lt;/a&gt; is open source, so licensing costs equal zero, correct? Yes, for the bare-bones MongoDB software. However, periphery software, like &lt;a href="http://www.siteuptime.com/prem_plan.php"&gt;monitoring services&lt;/a&gt;, stats tools, &lt;a href="http://www.mongodb.org/display/DOCS/Admin+UIs"&gt;web interfaces&lt;/a&gt;… these all have associated licensing and service costs from free, to thousands of dollars each. What about SLAs? Open source software doesn’t exactly provide one.&lt;/p&gt;

&lt;p&gt;MongoHQ can wrap all these up in one monthly price; along with free extras you won’t get by self-hosting, like a powerful &lt;a href="http://docs.mongohq.com/api" title="MongoHQ REST API"&gt;REST API&lt;/a&gt; for database and invoice management, and relevant DB/server statistics.&lt;/p&gt;

&lt;p&gt;Finally, you need some support. Of course, your $10,000 a month operations person can resove many issues–but sometimes even she can reach a dead-end. For the server environment, this often requires a support tier with access to the details of the underlying hardware (in AWS this can cost thousands of dollars for this kind of access, or pay-per support in dedicated hardware). Hosted solutions generally buy support in bulk, and thus can recieve high-level deals and priorities that smaller operations cannot. And don’t forget about MongoDB’s &lt;a href="http://www.10gen.com/support"&gt;commerical support&lt;/a&gt; through 10gen (the company that created MongoDB).&lt;/p&gt;

&lt;h2 id="totals"&gt;Totals&lt;/h2&gt;

&lt;p&gt;When taken as a whole, supporting one’s own database can be an expensive proposition. Ignoring the improved reliability, security and simplicity of leveraging a dedicated and experienced team, using a &lt;a href="http://mongohq.com/" title="MongoHQ"&gt;hosted Mongo&lt;/a&gt; solution can actually save labor, hardware, licensing, service, support, and other costs. We also provide all this with a single monthly payment. Oh, you also get to sleep at night while we fix things… but that’s a post for another day.&lt;/p&gt;</description><link>http://localhost:2368/mongodb-cost-breakdown/</link><guid isPermaLink="false">6002f445-30c0-418f-9d89-4f2f2fe519c0</guid><category>costs</category><category>hosted mongodb</category><category>mongo hosting</category><category>mongodb</category><category>mongodb hosting</category><category>mongohq</category><dc:creator>eric</dc:creator><pubDate>Thu, 15 Dec 2011 15:05:41 GMT</pubDate></item><item><title>Mongo in San Francisco</title><description>&lt;p&gt;If you missed us in &lt;a href="http://blog.mongohq.com/blog/2011/11/23/hello-seattle/"&gt;Seattle&lt;/a&gt;, most the MongoHQ team will be in San Francisco for the &lt;a href="http://www.10gen.com/events/mongosv-2011" title="MonogSV"&gt;largest MongoDB conference&lt;/a&gt; ever. Seven tracks – one day. &lt;em&gt;Seriously&lt;/em&gt; huge. So stop by our booth and say hello, and you’ll get a special prize. A &lt;em&gt;seriously&lt;/em&gt; special prize.&lt;/p&gt;

&lt;p&gt;The &lt;a href="http://github.com/mongohq/" title="MongoHQ github repoository"&gt;MongoHQ github repo&lt;/a&gt; is getting filled up with lots of brand new code. We recently started a Java driver code-named &lt;a href="http://en.wikipedia.org/wiki/Ast%C3%A9rix_%28satellite%29" title="Astérix French Satellite"&gt;Astérix&lt;/a&gt;, for the &lt;em&gt;still secret&lt;/em&gt; &lt;a href="http://docs.mongohq.com/api" title="MongoHQ API"&gt;MongoHQ API&lt;/a&gt;. This is not an official announcement, so don’t tell your friends just yet. But if you like Java and love MongoHQ (that’d be us… you know, &lt;em&gt;the &lt;a href="http://mongohq.com/" title="mongodb hosting"&gt;MongoDB hosting&lt;/a&gt; company&lt;/em&gt;) we certainly won’t stop you from spying the source code. It’ll end up in a Maven repository soon enough…&lt;/p&gt;

&lt;p&gt;&lt;figure class="embed"&gt;&lt;iframe allowfullscreen frameborder="0" src="http://www.youtube.com/embed/ePg1tbia9Bg?rel=0;3&amp;amp;autohide=1&amp;amp;showinfo=0"&gt;&lt;/iframe&gt;&lt;/figure&gt;&lt;em&gt;(If Seattle got a video, so should SF. My initial choice–&lt;a href="http://www.youtube.com/watch?v=4HvVYqR1cgU"&gt;We Built This City&lt;/a&gt;–was vetoed.)&lt;/em&gt;&lt;/p&gt;</description><link>http://localhost:2368/mongo-in-san-francisco/</link><guid isPermaLink="false">e135eb44-1ce8-4d08-b3e1-03f3ae9b3303</guid><category>10gen</category><category>conference</category><category>mongo hosting</category><category>mongoconf</category><category>mongodb</category><category>mongodb hosting</category><category>mongohq</category><category>mongosv</category><dc:creator>eric</dc:creator><pubDate>Fri, 02 Dec 2011 04:23:20 GMT</pubDate></item><item><title>Hello Seattle</title><description>&lt;p&gt;Jason and Eric will be holding a 30 minute session divulging all of our hitherto secret information on how to index properly. This is wild, real-world stuff you won’t get from &lt;a href="http://www.mongodb.org/display/DOCS/Home" title="mongodb manuals"&gt;the manuals&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This presentation will be held in the second best Northwest city of Seattle for their biannual &lt;a href="http://www.10gen.com/events/mongo-seattle-2011" title="MongoDB conference"&gt;MongoDB conference&lt;/a&gt;. Feel free to stop by if you happen to be in the neighborhood… and also have the day off of work… and happen to have purchased a ticket. They’re pretty cheap for a full day of Mongo topics—$100 general admission or $30 if you’re a student (yet, aren’t we all?).&lt;/p&gt;

&lt;p&gt;We’ll also be generally representing &lt;a href="http://mongohq.com/" title="MongoHQ"&gt;MongoHQ&lt;/a&gt;, by handing out stickers, explaining why you should not host your own databases, and possibly t-shirts &lt;em&gt;if the printers ever actually ship them&lt;/em&gt;!&lt;/p&gt;

&lt;p&gt;&lt;figure class="embed"&gt;&lt;iframe allowfullscreen frameborder="0" src="http://www.youtube.com/embed/_VlK2BOhmvU?rel=0;3&amp;amp;autohide=1&amp;amp;showinfo=0"&gt;&lt;/iframe&gt;&lt;/figure&gt;(Portland was the number one NW city, if you were curious. #amateururbanologist)&lt;/p&gt;</description><link>http://localhost:2368/hello-seattle/</link><guid isPermaLink="false">c89d50de-d5f9-4b1d-82ee-e9768edb9a99</guid><category>10gen</category><category>conference</category><category>indexing</category><category>mongo hosting</category><category>mongoconf</category><category>mongodb</category><category>mongodb hosting</category><category>mongohq</category><category>talks</category><dc:creator>eric</dc:creator><pubDate>Wed, 23 Nov 2011 03:59:33 GMT</pubDate></item><item><title>A Lot Going On</title><description>&lt;p&gt;Although &lt;a href="http://mongohq.com/" title="MongoHQ"&gt;MongoHQ&lt;/a&gt; has been around for nearly two years, our focus has been entirely on building amazing infrastuctures, dependable processes, solid tools, and generally learning how to invent a brand-new type of industry. These things are important, and largely define who we are.&lt;/p&gt;

&lt;p&gt;But one area where we’ve been lacking, is in letting others know what we’ve realized: the age of self-hosted data is coming to a close, and &lt;em&gt;database as a service&lt;/em&gt; will become increasingly standard. Few of us run our own &lt;a href="http://en.wikipedia.org/wiki/Private_branch_exchange" title="Private Branch Exchange"&gt;PBX&lt;/a&gt;’s anymore, and in a couple years few of us will run our own datacenters.&lt;/p&gt;

&lt;p&gt;But being a part of this exciting evolution in database management needs cheerleaders, and people who focus on saying what needs said &lt;em&gt;with style&lt;/em&gt;. I try to do &lt;a href="http://www.powells.com/biblio/62-9781934356920-1" title="Seven Databases in Seven Weeks"&gt;my part&lt;/a&gt;, and this week we welcome a new member to our team: &lt;a href="http://brandonmathis.com/" title="Brandon Mathis"&gt;Brandon Mathis&lt;/a&gt;. He’s a talented designer who is charged with giving MongoHQ a much needed facelift. From the site, to the webapp, to probably t-shirts. We’ve seen many changes in the past two years, and those changes are about to get a whole lot slicker.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(We’re certain he’ll earn a &lt;a href="http://media.tumblr.com/tumblr_lgbilzDkVB1qf8yek.gif" title="slow clap"&gt;slow clap&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Next up, we have our new &lt;a href="http://docs.mongohq.com/api" title="MongoHQ REST API"&gt;MongoHQ REST API&lt;/a&gt;. It’s not entirely baked yet, but that hasn’t stopped us from creating a secret Ruby interface for it. We’ll have much more on that later, but anticipate a vertiable deluge of open source tools from our camp – even a few which may seem unrelated to Mongo. Like our extended mustachio service, Facio (because it’s imperative we’re able to superimpose &lt;a href="http://en.wikipedia.org/wiki/Geordi_La_Forge" title="THE chief engineer"&gt;Geordi LaGorge&lt;/a&gt; visors on people as quickly as possible).&lt;/p&gt;

&lt;p&gt;You’ll see a lot more of us MongoHQ folks in the coming months at your local and global conferences. Many of us will be speaking about what we’ve learned in Mongo (or ruby, or javascript, or design, or administrating thousands of databases, or… you get the idea). Some of us will just be looking sexy near our exhibit hall table. And if we never meet in person, you’ll see more action from this blog, more articles, more project and community contributions… maybe even another book.&lt;/p&gt;

&lt;p&gt;We believe that data is simpler to access, share, and use when it’s hosted in the cloud – and free access to data integral to freedom. That’s not just a marketing pitch – it’s what drives our ideals. If you believe what we believe, we’d love to have you along for the journey. So &lt;a href="http://twitter.com/mongohq" title="MongoHQ Twitter"&gt;send&lt;/a&gt; any thoughts our way, and enjoy the ride!&lt;/p&gt;</description><link>http://localhost:2368/a-lot-going-on/</link><guid isPermaLink="false">bd13360b-5138-4e69-a323-52d0943e97e6</guid><category>company</category><category>culture</category><category>mongo hosting</category><category>mongodb hosting</category><category>mongohq</category><dc:creator>eric</dc:creator><pubDate>Wed, 16 Nov 2011 03:57:53 GMT</pubDate></item><item><title>Ruby Midwest Conference and MongoHQ</title><description>&lt;p&gt;If any of you Ruby folks happen to be near Kansas City this weekend, check out the &lt;a href="http://www.rubymidwest.com/" title="Ruby Midwest Conference"&gt;Ruby Midwest Conference&lt;/a&gt;. &lt;a href="http://mongohq.com/" title="MongoHQ"&gt;MongoHQ&lt;/a&gt; will be represented, in spirit and body, as our &lt;a href="http://www.rubymidwest.com/#speaker-coderoshi" title="Eric Redmond. Represent."&gt;resident talker&lt;/a&gt; will give a presentation on several databases at &lt;a href="http://www.rubymidwest.com/#speaker-coderoshi-talk" title="Eric Redmond Time"&gt;11:45am on Saturday&lt;/a&gt;. The blurb says 12 – but I think we can cover more!&lt;/p&gt;

&lt;p&gt;There will also be a prize for the best question asked. No, it won’t be SWAG. It’s something you’ll probably never find again.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(Note the time. This is right before lunch which is, as any experienced speaker will tell you, is the &lt;strong&gt;best time&lt;/strong&gt;. The audience is &lt;strong&gt;hungry&lt;/strong&gt; for new technology, &lt;strong&gt;starved&lt;/strong&gt; for information, and &lt;strong&gt;ravenous&lt;/strong&gt; for your every word. They’re certainly &lt;strong&gt;not&lt;/strong&gt; staring at the clock waiting for lunch to arrive.)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Seriously though, thanks to the &lt;a href="http://www.rubymidwest.com/#organizers" title="Ruby Midwest Peeps"&gt;Ruby Midwest Organizers&lt;/a&gt; for putting on what’s sure to be a great conference (and a special shout-out to &lt;a href="http://twitter.com/lpillow" title="The Pillow"&gt;Luke&lt;/a&gt; for probably pulling some strings).&lt;/p&gt;</description><link>http://localhost:2368/ruby-midwest-conference-and-mongohq/</link><guid isPermaLink="false">d9dabaed-7ca3-4610-b334-74654f3a628e</guid><category>midwestrubyconf</category><category>mongo</category><category>mongo hosting</category><category>mongodb</category><category>mongodb hosting</category><category>mongohq</category><category>rails</category><category>ruby</category><category>talks</category><dc:creator>eric</dc:creator><pubDate>Thu, 03 Nov 2011 03:54:32 GMT</pubDate></item><item><title>Introduction to Cloud9 and MongoDB</title><description>&lt;p&gt;If you are not familiar, &lt;a href="http://localhost:2368/content/images/2014/12/new_run_configuration_nxbcld_u6g637.png"&gt;Cloud9&lt;/a&gt;To continue, we need to get the connection URL from your MongoHQ database. Log into MongoHQ, select your database, and click the &lt;strong&gt;Database Info&lt;/strong&gt; tab. Put in your username and password into the URL (mine is ”&lt;em&gt;imbringing&lt;/em&gt;” and ”&lt;em&gt;sexyback&lt;/em&gt;”, respectively). Use this url to build your connection object in your Cloud9 project.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;code data-language="javascript"&amp;gt;var conn = mongo.db('imbringing:sexyback@rose.mongohq.com:10029/blackbook');  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we just need to get our collection, and perform an action on it, like find or insert.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;code data-language="javascript"&amp;gt;conn.collection('ladies').find({area_codes:503})  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then it’s a simple matter of attaching a callback to whatever form we want the data.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;code data-language="javascript"&amp;gt;conn.collection('ladies').find({area_codes:503}).toArray(function(err, items){  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Just to make this a little extra delicious, let’s wrap our database call in an /content/images/2014/12/mongohq&lt;em&gt;and&lt;/em&gt;cloud9&lt;em&gt;ide&lt;/em&gt;rfteul_svtonm.png)&lt;/p&gt;</description><link>http://localhost:2368/introduction-to-cloud9-and-mongodb/</link><guid isPermaLink="false">c34f09d9-02c8-4b1f-ae3b-b0a10f6fc164</guid><category>c9</category><category>cloud</category><category>cloud9</category><category>database as a service</category><category>dbaas</category><category>hosted database</category><category>javascript</category><category>mongo</category><category>mongo database</category><category>mongo hosting</category><category>mongodb</category><category>mongodb hosting</category><category>mongohq</category><category>node</category><category>nodejs</category><dc:creator>eric</dc:creator><pubDate>Sun, 23 Oct 2011 03:43:18 GMT</pubDate></item></channel></rss>